name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            output: 'PDF-Viewer.exe'
            name: Windows
            console-mode: disable
          - os: ubuntu-latest
            output: 'PDF-Viewer.bin'
            name: Linux
            console-mode: force
          - os: macos-latest
            output: 'PDF-Viewer.bin'
            name: macOS
            console-mode: force

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.5.11"
          enable-cache: true

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: uv add pymupdf pillow nuitka

      - name: Build Executable with Nuitka (Windows)
        if: matrix.os == 'windows-latest'
        run: python -m nuitka --standalone --enable-plugin=tk-inter --windows-console-mode=disable --assume-yes-for-downloads --output-dir=build --output-file=PDF-Viewer main.py
        shell: cmd

      - name: Build Executable with Nuitka (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          python -m nuitka --standalone \
            --enable-plugin=tk-inter \
            --windows-console-mode=force \
            --assume-yes-for-downloads \
            --output-dir=build \
            --output-file=PDF-Viewer \
            main.py
        shell: bash

      - name: Find and Copy Executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Get-ChildItem -Path "build" -Recurse -Filter "*.exe" | ForEach-Object {
            Copy-Item $_.FullName -Destination "build/PDF-Viewer.exe" -Force
            Write-Host "Copied: $($_.FullName)"
          }
          if (Test-Path "build/PDF-Viewer.exe") {
            Write-Host "✓ PDF-Viewer.exe готов!"
          }
        shell: pwsh

      - name: Find and Copy Executable (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          find build -type f \( -executable -o -name "*.bin" -o -name "PDF-Viewer" \) | head -1 | xargs -I {} cp {} build/PDF-Viewer.bin || true
          chmod +x build/PDF-Viewer.bin 2>/dev/null || true
          if [ -f "build/PDF-Viewer.bin" ]; then
            echo "✓ PDF-Viewer.bin готов!"
            ls -lh build/PDF-Viewer.bin
          fi
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PDF-Viewer-${{ matrix.name }}
          path: build/PDF-Viewer.*
          if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure
        run: ls -R artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
