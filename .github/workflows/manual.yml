name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            output: '*.exe'
            name: Windows
            console-mode: disable
          - os: ubuntu-latest
            output: '*.bin'
            name: Linux
            console-mode: force
          - os: macos-latest
            output: '*.app/**/*'
            name: macOS
            console-mode: force

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install Dependencies
        run: uv sync --frozen

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          mode: standalone
          enable-plugins: tk-inter
          windows-console-mode: ${{ matrix.console-mode }}
          output-file: PDF-Viewer

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PDF-Viewer-${{ matrix.name }}
          path: |
            build/${{ matrix.output }}
            build/*.dist/**/*
          include-hidden-files: true

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
