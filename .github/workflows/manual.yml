name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            output: 'PDF-Viewer.exe'
            name: Windows
            console-mode: disable
          - os: ubuntu-latest
            output: 'PDF-Viewer.bin'
            name: Linux
            console-mode: force
          - os: macos-latest
            output: 'PDF-Viewer.bin'
            name: macOS
            console-mode: force

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.5.11"
          enable-cache: true

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          uv pip install --system pymupdf pillow nuitka

      - name: Build Executable with Nuitka
        run: |
          python -m nuitka --standalone \
            --enable-plugin=tk-inter \
            --windows-console-mode=${{ matrix.console-mode }} \
            --assume-yes-for-downloads \
            --output-dir=build \
            --output-file=PDF-Viewer \
            main.py

      - name: Rename Output (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if (Test-Path "build\main.dist") {
            Rename-Item -Path "build\main.dist\main.exe" -NewName "PDF-Viewer.exe"
          }
        shell: pwsh

      - name: Rename Output (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          if [ -f "build/main.dist/main.bin" ]; then
            mv build/main.dist/main.bin build/main.dist/PDF-Viewer.bin
          elif [ -f "build/main.bin" ]; then
            mv build/main.bin build/PDF-Viewer.bin
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PDF-Viewer-${{ matrix.name }}
          path: |
            build/main.dist/${{ matrix.output }}
            build/${{ matrix.output }}
          if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure
        run: ls -R artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
